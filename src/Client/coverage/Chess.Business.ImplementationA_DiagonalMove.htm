<!DOCTYPE html>
<html data-ng-app="coverageApp">
<head>
<meta charset="utf-8" />
<title>Chess.Business.ImplementationA.Moves.DiagonalMove - Coverage Report</title>
<link rel="stylesheet" type="text/css" href="report.css" />
</head><body data-ng-controller="DetailViewCtrl"><div class="container">
<h1>Summary</h1>
<table class="overview">
<colgroup>
<col style="width: 135px;" />
<col />
</colgroup>
<tbody>
<tr><th>Class:</th><td>Chess.Business.ImplementationA.Moves.DiagonalMove</td></tr>
<tr><th>Assembly:</th><td>Chess.Business.ImplementationA</td></tr>
<tr><th>File(s):</th><td><a href="#ddevdisssrcChessChessBusinessImplementationAMovesDiagonalMovecs">d:\dev\diss\src\Chess\Chess.Business.ImplementationA\Moves\DiagonalMove.cs</a></td></tr>
<tr><th>Covered lines:</th><td>16</td></tr>
<tr><th>Uncovered lines:</th><td>0</td></tr>
<tr><th>Coverable lines:</th><td>16</td></tr>
<tr><th>Total lines:</th><td>29</td></tr>
<tr><th>Line Coverage:</th><td>100%</td></tr>
<tr><th>Branch coverage:</th><td>100%</td></tr>
</tbody>
</table>
<h1>Metrics</h1>
<table class="overview">
<thead><tr><th>Method</th><th>Cyclomatic Complexity</th><th>Sequence Coverage</th><th>Branch Coverage</th></tr></thead>
<tbody>
<tr><td title="System.Collections.Generic.IList`1&lt;Chess.Infrastructure.Position&gt; Chess.Business.ImplementationA.Moves.DiagonalMove::GetMoves(Chess.Business.Interfaces.Piece.IPiece,System.Collections.Generic.IEnumerable`1&lt;Chess.Business.Interfaces.Piece.IPiece&gt;)">GetMoves(...)</td><td>5</td><td>100</td><td>100</td></tr>
<tr><td title="System.Collections.Generic.List`1&lt;Chess.Infrastructure.Position&gt; Chess.Business.ImplementationA.Moves.DiagonalMove::GenerateAttacks(Chess.Business.Interfaces.Piece.IPiece,System.Collections.Generic.IEnumerable`1&lt;Chess.Business.Interfaces.Piece.IPiece&gt;)">GenerateAttacks(...)</td><td>5</td><td>100</td><td>100</td></tr>
</tbody>
</table>
<h1>File(s)</h1>
<h2 id="ddevdisssrcChessChessBusinessImplementationAMovesDiagonalMovecs">d:\dev\diss\src\Chess\Chess.Business.ImplementationA\Moves\DiagonalMove.cs</h2>
<table class="lineAnalysis">
<thead><tr><th></th><th>#</th><th>Line</th><th></th><th>Line Coverage</th></tr></thead>
<tbody>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1</code></td><td></td><td class="lightgray"><code>using&nbsp;Chess.Business.Interfaces.Piece;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>2</code></td><td></td><td class="lightgray"><code>using&nbsp;Chess.Infrastructure;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>3</code></td><td></td><td class="lightgray"><code>using&nbsp;System.Collections.Generic;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>4</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>5</code></td><td></td><td class="lightgray"><code>namespace&nbsp;Chess.Business.ImplementationA.Moves</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>6</code></td><td></td><td class="lightgray"><code>{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>7</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;class&nbsp;DiagonalMove&nbsp;:&nbsp;ContinousConditionedMove</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>8</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>9</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;IList&lt;Position&gt;&nbsp;GetMoves(IPiece&nbsp;currentPiece,&nbsp;IEnumerable&lt;IPiece&gt;&nbsp;allPieces)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '19', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">19</td><td class="rightmargin right"><code>10</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '19', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">19</td><td class="rightmargin right"><code>11</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;positions&nbsp;=&nbsp;new&nbsp;List&lt;Position&gt;();</code></td></tr>
<tr title="2 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '80', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">80</td><td class="rightmargin right"><code>12</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;positions.AddRange(GeneratePositions((c,&nbsp;p)&nbsp;=&gt;&nbsp;c.IsFree(p),&nbsp;currentPiece,&nbsp;allPieces,&nbsp;1,&nbsp;1));</code></td></tr>
<tr title="2 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '91', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">91</td><td class="rightmargin right"><code>13</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;positions.AddRange(GeneratePositions((c,&nbsp;p)&nbsp;=&gt;&nbsp;c.IsFree(p),&nbsp;currentPiece,&nbsp;allPieces,&nbsp;-1,&nbsp;-1));</code></td></tr>
<tr title="2 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '73', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">73</td><td class="rightmargin right"><code>14</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;positions.AddRange(GeneratePositions((c,&nbsp;p)&nbsp;=&gt;&nbsp;c.IsFree(p),&nbsp;currentPiece,&nbsp;allPieces,&nbsp;1,&nbsp;-1));</code></td></tr>
<tr title="2 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '73', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">73</td><td class="rightmargin right"><code>15</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;positions.AddRange(GeneratePositions((c,&nbsp;p)&nbsp;=&gt;&nbsp;c.IsFree(p),&nbsp;currentPiece,&nbsp;allPieces,&nbsp;-1,&nbsp;1));</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '19', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">19</td><td class="rightmargin right"><code>16</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;positions;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '19', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">19</td><td class="rightmargin right"><code>17</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>18</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>19</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;override&nbsp;List&lt;Position&gt;&nbsp;GenerateAttacks(IPiece&nbsp;currentPiece,&nbsp;IEnumerable&lt;IPiece&gt;&nbsp;allPieces)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '9', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">9</td><td class="rightmargin right"><code>20</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '9', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">9</td><td class="rightmargin right"><code>21</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;positions&nbsp;=&nbsp;new&nbsp;List&lt;Position&gt;();</code></td></tr>
<tr title="2 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '38', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">38</td><td class="rightmargin right"><code>22</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;positions.AddRange(GeneratePositions((c,&nbsp;p)&nbsp;=&gt;&nbsp;!c.IsFree(p),&nbsp;currentPiece,&nbsp;allPieces,&nbsp;1,&nbsp;1));</code></td></tr>
<tr title="2 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '37', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">37</td><td class="rightmargin right"><code>23</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;positions.AddRange(GeneratePositions((c,&nbsp;p)&nbsp;=&gt;&nbsp;!c.IsFree(p),&nbsp;currentPiece,&nbsp;allPieces,&nbsp;-1,&nbsp;-1));</code></td></tr>
<tr title="2 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '33', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">33</td><td class="rightmargin right"><code>24</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;positions.AddRange(GeneratePositions((c,&nbsp;p)&nbsp;=&gt;&nbsp;!c.IsFree(p),&nbsp;currentPiece,&nbsp;allPieces,&nbsp;1,&nbsp;-1));</code></td></tr>
<tr title="2 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '31', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">31</td><td class="rightmargin right"><code>25</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;positions.AddRange(GeneratePositions((c,&nbsp;p)&nbsp;=&gt;&nbsp;!c.IsFree(p),&nbsp;currentPiece,&nbsp;allPieces,&nbsp;-1,&nbsp;1));</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '9', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">9</td><td class="rightmargin right"><code>26</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;positions;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '9', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">9</td><td class="rightmargin right"><code>27</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>28</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>29</code></td><td></td><td class="lightgray"><code>}</code></td></tr>
</tbody>
</table>
<div class="footer">Generated by: ReportGenerator 2.1.4.0<br />29-Apr-15 - 5:27:02 PM<br /><a href="http://www.palmmedia.de">www.palmmedia.de</a></div></div>
<script type="text/javascript" src="combined.js"></script>
</body></html>